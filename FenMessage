package Bavards;

import java.awt.BorderLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class FenMessage extends JFrame implements ActionListener{
	private Bavard bavard;
	private JPanel panel = new JPanel();
	private JPanel panel2 = new JPanel();
	public JTextField message = new JTextField(23);
	private JList<String> utilisateurs = new JList<String>();
	public JTextArea chat = new JTextArea(16,20);
	private JScrollPane sp2 = new JScrollPane(chat, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
	private JButton envoyer = new JButton("Envoyer");
	private JButton deco = new JButton("Deconnexion");
	private Concierge concierge;
	
	
	public FenMessage(Bavard b,Concierge c){
		this.bavard = b;		
		this.concierge = c;
		DefaultListModel<String> model = new DefaultListModel<String>();
		for(Bavard e:concierge.bavards) {
			    model.addElement(e.identifiant);
			}
		utilisateurs.setModel(model);
		System.out.println(utilisateurs);
		this.setTitle("chat");
	    this.setSize(500, 400);
	    this.setResizable(false);
	    this.setLocationRelativeTo(null);
	    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    envoyer.addActionListener(this);
	    deco.addActionListener(this);
	    
	    panel.setLayout(new GridBagLayout());
	    GridBagConstraints gbc = new GridBagConstraints();
	    panel2.setLayout(new BorderLayout());
	    
	    gbc.weightx = 0;
	    gbc.weighty = 1;
	    gbc.fill = GridBagConstraints.HORIZONTAL;
	    
	    gbc.insets = new Insets(5, 5, 5, 5);
	    
	    gbc.gridx = 0;
	    gbc.gridy = 0;
		panel.add(sp2, gbc);	    
	    
	    gbc.gridx = 0;
	    gbc.gridwidth = 4;
	    gbc.gridy = 3;
	    panel.add(message, gbc);
	    
	    gbc.gridx = 0;
	    gbc.gridwidth = 4;
	    gbc.gridy = 4;
		panel.add(envoyer, gbc);
				
	    chat.setEditable(false);
		
	    panel2.add(panel, BorderLayout.CENTER);
	    
	    this.setContentPane(panel2);
	    this.setVisible(true);
	    
	}
		public void refresh() {
			chat.repaint();
			DefaultListModel<String> model = new DefaultListModel<String>();
			for(Bavard e:concierge.bavards) {
				    model.addElement(e.identifiant);
				}
			utilisateurs.setModel(model);
			panel2.updateUI();
		}
		
	    public void actionPerformed(ActionEvent e) {
			Object  source=e.getSource();
			if (source.equals(envoyer)) {  
				bavard.genererPapotageEvent(message.getText(), bavard.identifiant);
			}
			else if(source.equals(deco)) {
				bavard.setConnected();
				System.out.println(bavard.identifiant + bavard.isConnected());
	            FenMessage.this.dispose();
			}
				
	}
}
